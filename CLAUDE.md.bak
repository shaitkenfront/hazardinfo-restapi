# CLAUDE.md

このファイルは、Claude Code (claude.ai/code) がこのリポジトリ内のコードを操作する際のガイダンスを提供します。

## 開発コマンド

### テスト
- `pytest` - すべてのテストを実行します
- `pytest tests/test_lambda_function.py -v` - 特定のテストファイルを詳細な出力付きで実行します
- `pytest tests/test_lambda_function.py tests/test_hazard_info.py -v` - 特定のテストファイルを複数実行します
- `python -m pytest --collect-only` - 利用可能なすべてのテストを実行せずに一覧表示します

### Python 環境
- 仮想環境の作成: `python -m venv .venv`
- アクティベート (Windows): `.venv\Scripts\activate`
- アクティベート (macOS/Linux): `source .venv/bin/activate`
- 依存関係をインストール: `pip install -r requirements.txt`

### 必要な環境変数
- `LINE_CHANNEL_ACCESS_TOKEN` - LINE Messaging API アクセストークン
- `LINE_CHANNEL_SECRET` - LINE Messaging API のチャンネルシークレット
- `GOOGLE_API_KEY` - Google Geocoding API キー

## アーキテクチャの概要

これは、LINE Bot と連携した AWS Lambda デプロイメント向けに設計された、日本のハザード情報検索用の Python ベースの REST API です。

### コアアーキテクチャ
- **エントリポイント**: `lambda_function.py` - REST APIとLINE Bot Webhookの両方に対応するAWS Lambdaハンドラー
- **アプリモジュール**: `/app/`ディレクトリにコアビジネスロジックモジュールが含まれています
- **デュアルインターフェース**: HTTP REST API呼び出しとLINE Messaging API Webhookの両方をサポート

### 主要モジュール
- `app/hazard_info.py` - 複数の政府API（J-SHIS、国土地理院ハザードマップ）からのコアハザードデータ取得
- `app/geocoding.py` - 住所のジオコーディングと座標系変換（WGS84 ↔ 東京測地系）
- `app/input_parser.py` - 住所と座標の入力検証と解析
- `app/geojsonhelper.py` - 空間データ用のGeoJSON処理ユーティリティ

### データソース統合
- **J-SHIS API** - 日本の地震確率データ地震ハザード情報ステーション
- **国土地理院ハザードマップタイル** - 国土地理院提供の浸水深、津波、土砂崩れデータ
- **Google Geocoding API** - 住所から座標への変換
- **LINE Messaging API** - ユーザーインタラクション用ボットインターフェース

### 座標系
本システムは、WGS84（世界標準）と東京測地系（日本ローカル）の両方の座標系に対応しており、自動変換が可能です。

### 選択的データ取得 (v2.0)
`hazard_types` パラメータを使用すると、クライアントは特定の種類のハザード情報をリクエストできます。
- `earthquake` - 地震発生確率データ
- `flood` - 洪水浸水深
- `tsunami` - 津波浸水
- `high_tide` - 高潮浸水
- `large_fill_land` - 大規模埋め立て地
- `landslide` - 土砂崩れ危険区域

これにより、Web アプリケーションの段階的な読み込みとタイムアウト防止が可能になります。

### API レスポンス構造
すべてのレスポンスには、座標、ソース情報、入力タイプ、データム、および要求されたハザードの種類が含まれており、完全なトレーサビリティが確保されます。